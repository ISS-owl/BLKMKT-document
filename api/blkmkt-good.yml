swagger: '2.0'
info:
  description: 这是一篇关于商品的API文档
  version: 1.1.0
  title: 商品API文档
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: ShZh7
    url: 'https://github.com/Sh-Zh-7'
    email: zhihaoshen7@qq.com
  license:
    name: GPL-v3.0
    url: 'https://www.gnu.org/licenses/gpl-3.0.html'
host: 'localhost:7000'
basePath: /
tags:
  - name: 管理员
    description: 只有管理员才有权限操作的内容
  - name: 商品
    description: 所有关于商品的内容
  - name: 商品评论
    description: 所有关于商品评论的内容
  - name: 评论回复
    description: 所有关于商品评论回复的内容
  - name: 商品上架
    description: 所有关于商品上架的信息
  - name: 商品检索
    description: 根据各种检索条件的组合得到商品列表
paths:
  /good/good/:
    get:
      tags:
        - 商品
      summary: 获取用户所属的商品信息
      description: 根据传入的模式不同返回不同的商品信息
      operationId: getGoodByConditionUsingGET
      produces:
        - '*/*'
      parameters:
        - name: mode
          in: query
          description: 模式（0-未上架，1-上架，2-全部）
          required: true
          type: integer
          format: int32
          x-example: 2
        - name: ownerId
          in: query
          description: 用户id
          required: true
          type: integer
          format: int32
          x-example: 1
      responses:
        '200':
          description: OK
          schema:
            type: object
            example:
              code: 200
              msg: success
              data:
                - id: 7
                  ownerId: 1
                  price: 200
                  gtype: 0
                  status: 1
                  category: 电子产品
                  totalNum: 1
                  currentNum: 1
                  likeNum: 3
                  goodImgUrl: baidu.com
                  createTime: '2020-12-13T01:59:23.000+0000'
                  updateTime: '2020-12-13T01:59:23.000+0000'
                  title: 华为手机
                  subtitle: 出9成新华为手机
                  description: 500出9成新华为手机
                - id: 8
                  ownerId: 1
                  price: 10
                  gtype: 0
                  status: 1
                  category: 课程资料
                  totalNum: 1
                  currentNum: 1
                  likeNum: 0
                  goodImgUrl: baidu.com
                  createTime: '2020-12-13T01:59:27.000+0000'
                  updateTime: '2020-12-13T01:59:27.000+0000'
                  title: 收WPFTest
                  subtitle: 就是那个HJC上课用到的WPFTest
                  description: 王涛NB
                - id: 10
                  ownerId: 1
                  price: 5
                  gtype: 1
                  status: 1
                  category: 课程资料
                  totalNum: 1
                  currentNum: 1
                  likeNum: 0
                  goodImgUrl: baidu.com
                  createTime: '2020-12-13T06:41:34.000+0000'
                  updateTime: '2020-12-13T06:41:34.000+0000'
                  title: 代课
                  subtitle: 早八青楼520代课
                  description: 不会点名，签到就可以走
                - id: 11
                  ownerId: 1
                  price: 200
                  gtype: 0
                  status: 0
                  category: 课程资料
                  totalNum: 1
                  currentNum: 1
                  likeNum: 0
                  goodImgUrl: bing.com
                  createTime: '2020-12-15T03:42:51.000+0000'
                  updateTime: '2020-12-15T03:42:51.000+0000'
                  title: 出算法李春葆
                  subtitle: 5r出算法李春葆
                  description: 内含算法开卷考内容
              
    post:
      tags:
        - 商品
      summary: 创建商品
      description: 创建商品
      operationId: saveUsingPOST_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: good
          description: good entity
          required: true
          schema:
            example:
              ownerId: 1
              price: 200
              gtype: 0
              status: 0
              category: 课程资料
              totalNum: 1
              currentNum: 1
              goodImgUrl: bing.com
              title: 出算法李春葆
              subtitle: 5r出算法李春葆
              description: 内含算法开卷考内容
              
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    put:
      tags:
        - 商品
      summary: 更新商品
      description: 更新商品（必须指定id）
      operationId: updateUsingPUT_2
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: good
          description: good entity
          required: true
          schema:
            example:
              id: 11
              price: 5
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    delete:
      tags:
        - 商品
      summary: 删除商品
      description: 删除商品
      operationId: deleteUsingDELETE_2
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ids
          description: id array
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
  /good/good/list:
    get:
      tags:
        - 管理员
      summary: 获取所有商品信息
      description: 根据分页参数（可缺省）获取信息
      operationId: listUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: pageNo
          in: query
          description: Number of pages
          required: false
          type: integer
          format: int64
        - name: pageSize
          in: query
          description: Size of pages
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseWithData«PageUtils«GoodEntity»»'
  '/good/good/{id}':
    get:
      tags:
        - 管理员
      summary: 获取单个商品的信息
      description: 获取指定id的商品信息
      operationId: infoUsingGET_2
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseWithData«GoodEntity»'
  /good/good_comment/:
    post:
      tags:
        - 商品评论
      summary: 增加评论
      description: 增加评论
      operationId: saveUsingPOST_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goodComment
          description: goodComment entity
          required: true
          schema:
            example:
              goodId: 7
              userId: 2
              content: 收，妮明天有空不
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    put:
      tags:
        - 商品评论
      summary: 修改评论
      description: 修改评论
      operationId: updateUsingPUT_1
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goodComment
          description: goodComment entity
          required: true
          schema:
            example:
              id: 1
              content: 我们中国真的太棒啦
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    delete:
      tags:
        - 商品评论
      summary: 删除评论
      description: 删除评论，包含直接评论和对评论的回复
      operationId: deleteUsingDELETE_1
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ids
          description: id array
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
  /good/good_comment/list:
    get:
      tags:
        - 管理员
      summary: 获取所有评论
      description: 根据分页参数（可缺省）获取信息
      operationId: listUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: pageNo
          in: query
          description: Number of pages
          required: false
          type: integer
          format: int64
        - name: pageSize
          in: query
          description: Size of pages
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseWithData«PageUtils«GoodCommentEntity»»'
  '/good/good_comment/{good_id}':
    get:
      tags:
        - 商品评论
      summary: 获取单个商品评论
      description: 根据商品id查询所有评论信息
      operationId: infoUsingGET_1
      produces:
        - '*/*'
      parameters:
        - name: good_id
          in: path
          description: 商品id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            example:
              msg: success
              code: 200
              data:
                - userId: 1
                  username: 王涛
                  headImgUrl: baidu.com
                  commentEntity:
                    id: 2
                    goodId: 7
                    userId: 1
                    content: 我们华为真是太棒啦
                    createTime: '2020-12-13T12:25:18.000+0000'
                    updateTime: '2020-12-13T12:25:18.000+0000'
                  replayEntities:
                    - userId: 1
                      username: 王涛
                      headImgUrl: baidu.com
                      commentReplayEntity:
                        id: 3
                        commentId: 2
                        userId: 1
                        content: 你做的好！你做的好啊！
                        createTime: '2020-12-13T12:33:01.000+0000'
                        updateTime: '2020-12-13T12:33:01.000+0000'
                - userId: 2
                  username: 方正
                  headImgUrl: google.com
                  commentEntity:
                    id: 4
                    goodId: 7
                    userId: 2
                    content: 收，妮明天有空不
                    createTime: '2020-12-13T12:32:32.000+0000'
                    updateTime: '2020-12-13T12:32:32.000+0000'
                  replayEntities: []
            
  /good/comment_replay/:
    post:
      tags:
        - 评论回复
      summary: 添加回复
      description: 添加回复
      operationId: saveUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: commentReplay
          description: commentReplay entity
          required: true
          schema:
            example:
              commentId: 2
              userId: 1
              content: 你做的好！你做的好啊！
            
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    put:
      tags:
        - 评论回复
      summary: 修改回复
      description: 修改回复
      operationId: updateUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: commentReplay
          description: commentReplay entity
          required: true
          schema:
            example:
              id: 1
              content: 至福
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    delete:
      tags:
        - 评论回复
      summary: 删除回复
      description: 删除回复
      operationId: deleteUsingDELETE
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ids
          description: id array
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
  /good/comment_replay/list:
    get:
      tags:
        - 管理员
      summary: 获取所有回复信息
      description: 根据分页参数（可缺省）获取信息
      operationId: listUsingGET
      produces:
        - '*/*'
      parameters:
        - name: pageNo
          in: query
          description: Number of pages
          required: false
          type: integer
          format: int64
        - name: pageSize
          in: query
          description: Size of pages
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseWithData«PageUtils«CommentReplyEntity»»'
  '/good/comment_replay/{id}':
    get:
      tags:
        - 管理员
      summary: 获取单个回复的信息
      description: 获取指定id的信息
      operationId: infoUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CommentReplyEntity'
  /good/good/up:
    post:
      tags:
        - 商品上架
      summary: 创建商品并上架
      description: 直接创建商品实体并上架
      operationId: upGoodUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: good
          description: 商品信息
          required: true
          schema:
            example:
              title: 代课
              subtitle: 早八青楼520代课
              gtype: 1
              category: 课程资料
              ownerId: 1
              price: 5
              totalNum: 1
              currentNum: 1
              goodImgUrl: baidu.com
              description: 不会点名，签到就可以走
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    put:
      tags:
        - 商品上架
      summary: 更新上架商品
      description: 更新上架商品同时更新数据库（必须携带id）
      operationId: updateGoodUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: good
          description: 商品信息
          required: true
          schema:
            example:
              id: 6
              title: 代课
              subtitle: 早八青楼520代课
              gtype: 1
              category: 课程资料
              ownerId: 1
              price: 5
              totalNum: 1
              currentNum: 1
              goodImgUrl: baidu.com
              description: 不会点名，签到就可以走
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
    delete:
      tags:
        - 商品上架
      summary: 商品下架
      description: 根据id直接删除上架商品
      operationId: deleteGoodUsingDELETE
      produces:
        - '*/*'
      parameters:
        - in: body
          name: ids
          description: 商品id
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
  '/good/good/up/{id}':
    get:
      tags:
        - 商品上架
      summary: 商品上架
      description: 根据给定id上架已有的，未上架的商品
      operationId: upGoodUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: 未上架的商品id
          required: true
          type: integer
          format: int32
          x-example: 1
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
  /search/good:
    get:
      tags:
        - 商品检索
      summary: 搜索引擎，检索商品用
      description: 通过检索，过滤，排序，分页得到商品信息
      operationId: searchGET
      produces:
        - '*/*'
      parameters:
        - name: keyword
          in: query
          description: 关键字（查询商品title）
          type: string
          x-example: "算法导论"
        - name: priceRange
          in: query
          description: 价格区间【\_1表示小于等于1，3_表示大于等于3，1\_3表示大于等于1小于等于3】
          type: string
          x-example: "150_300"
        - name: gtype
          in: query
          description: 出货还是收货【0-出货，1收货】
          type: integer
          format: int32
          x-example: 0
        - name: category
          in: query
          description: 种类【书籍PDF，课程资料，电子产品，生活用品，其它信息】
          type: string
          x-example: "电子产品"
        - name: hasStock
          in: query
          description: 是否有货【0-无，1-有】
          type: integer
          format: int32
          x-example: "1"
        - name: sort
          in: query
          description: 排序字段【[price/likeNum/createTime/updateTime]_[asc/desc]】
          type: string
          x-example: "price_asc"
        - name: pageNum
          in: query
          description: 当前页码
          type: integer
          format: int32
          x-example: 1
        - name: pageSize
          in: query
          description: 当前页大小
          type: integer
          format: int32
          x-example: 3
      responses:
        '200':
          description: OK
          schema:
            example:
              msg: success
              data:
                goodModelList:
                  - id: 1
                    ownerId: 1
                    price: 200
                    gtype: 0
                    category: 电子产品
                    hasStock: 1
                    likeNum: 0
                    goodImgUrl: baidu.com
                    createTime: '2020-12-12T12:32:08.368+0000'
                    updateTime: '2020-12-12T12:32:08.368+0000'
                    title: 华为手机
                    subtitle: 出9成新华为手机
                  - id: 2
                    ownerId: 2
                    price: 300
                    gtype: 1
                    category: 书籍PDF
                    hasStock: 1
                    likeNum: 0
                    goodImgUrl: baidu.com
                    createTime: '2020-12-12T12:40:00.794+0000'
                    updateTime: '2020-12-12T12:40:00.794+0000'
                    title: 收算法导论
                    subtitle: 应付算法期末开卷用
                  - id: 5
                    ownerId: 2
                    price: 50
                    gtype: 0
                    category: 生活用品
                    hasStock: 1
                    likeNum: 0
                    goodImgUrl: baidu.com
                    createTime: '2020-12-12T12:44:27.982+0000'
                    updateTime: '2020-12-12T12:44:27.982+0000'
                    title: 出篮球
                    subtitle: 50r出一个全新篮球
                total: 3
                pageNum: 1
                totalPages: 1
              code: 200
  '/good/good/like/{id}':
    put:
      tags:
        - 商品上架
      summary: 点赞上架商品
      description: 给上架的商品点赞
      operationId: likeGoodUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: 已上架的商品id
          required: true
          type: integer
          format: int32
          x-example: 1
      responses:
        '200':
          description: OK
          schema:
            example:
              code: 200
              msg: "success"
definitions:
  GoodEntity:
    type: object
    properties:
      category:
        type: string
        description: 分类
      createTime:
        type: string
        format: date-time
        description: 创建时间
      currentNum:
        type: integer
        format: int32
        description: 当前数量
      description:
        type: string
        description: 描述
      goodImgUrl:
        type: string
        description: 商品图片的url
      gtype:
        type: integer
        format: int32
        description: '出货收货[0 - 出货, 1 - 收货]'
      id:
        type: integer
        format: int32
        description: 货物id
      likeNum:
        type: integer
        format: int32
        description: 点赞数
      ownerId:
        type: integer
        format: int32
        description: 卖家id
      price:
        type: integer
        format: int32
        description: 价格
      status:
        type: integer
        format: int32
        description: '是否上架[0 - 上架, 1 - 未上架]'
      subtitle:
        type: string
        description: 副标题
      title:
        type: string
        description: 标题
      totalNum:
        type: integer
        format: int32
        description: 总数
      updateTime:
        type: string
        format: date-time
        description: 更新时间
    title: GoodEntity
  GoodCommentEntity:
    type: object
    properties:
      content:
        type: string
        description: 内容
      createTime:
        type: string
        format: date-time
        description: 创建时间
      goodId:
        type: integer
        format: int32
        example: 2
        description: 货物id
      id:
        type: integer
        format: int32
        example: 1
        description: id
      updateTime:
        type: string
        format: date-time
        description: 更新时间
      userId:
        type: integer
        format: int32
        example: 3
        description: 用户id
    title: GoodCommentEntity
  CommentReplyEntity:
    type: object
    properties:
      commentId:
        type: integer
        format: int32
        description: 评论id
      content:
        type: string
        description: 内容
      createTime:
        type: string
        format: date-time
        description: 创建时间
      id:
        type: integer
        format: int32
        description: id
      updateTime:
        type: string
        format: date-time
        description: 更新时间
      userId:
        type: integer
        format: int32
        description: 用户id
    title: CommentReplyEntity
  PageUtils«GoodEntity»:
    type: object
    properties:
      currPage:
        type: integer
        format: int32
        example: 1
        description: 当前页数
      list:
        type: array
        description: 集合
        items:
          $ref: '#/definitions/GoodEntity'
      pageSize:
        type: integer
        format: int32
        example: 10
        description: 每页记录数
      totalCount:
        type: integer
        format: int32
        example: 1
        description: 总记录数
      totalPage:
        type: integer
        format: int32
        example: 1
        description: 总页数
    title: PageUtils«GoodEntity»
  PageUtils«GoodCommentEntity»:
    type: object
    properties:
      currPage:
        type: integer
        format: int32
        example: 1
        description: 当前页数
      list:
        type: array
        description: 集合
        items:
          $ref: '#/definitions/GoodCommentEntity'
      pageSize:
        type: integer
        format: int32
        example: 10
        description: 每页记录数
      totalCount:
        type: integer
        format: int32
        example: 1
        description: 总记录数
      totalPage:
        type: integer
        format: int32
        example: 1
        description: 总页数
    title: PageUtils«GoodCommentEntity»
  PageUtils«CommentReplyEntity»:
    type: object
    properties:
      currPage:
        type: integer
        format: int32
        example: 1
        description: 当前页数
      list:
        type: array
        description: 集合
        items:
          $ref: '#/definitions/CommentReplyEntity'
      pageSize:
        type: integer
        format: int32
        example: 10
        description: 每页记录数
      totalCount:
        type: integer
        format: int32
        example: 1
        description: 总记录数
      totalPage:
        type: integer
        format: int32
        example: 1
        description: 总页数
    title: PageUtils«CommentReplyEntity»

  Response:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 200
      msg:
        type: string
        example: success
    title: Response
  ResponseWithData«GoodCommentEntity»:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 200
      data:
        $ref: '#/definitions/GoodCommentEntity'
      msg:
        type: string
        example: success
    title: ResponseWithData«GoodCommentEntity»
  ResponseWithData«CommentReplyEntity»:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 200
      data:
        $ref: '#/definitions/CommentReplayEntity'
      msg:
        type: string
        example: success
    title: ResponseWithData«CommentReplayEntity»
  ResponseWithData«GoodEntity»:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 200
      data:
        $ref: '#/definitions/GoodEntity'
      msg:
        type: string
        example: success
    title: ResponseWithData«GoodEntity»
  ResponseWithData«PageUtils«GoodCommentEntity»»:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 200
      data:
        $ref: '#/definitions/PageUtils«GoodCommentEntity»'
      msg:
        type: string
        example: success
    title: ResponseWithData«PageUtils«GoodCommentEntity»»
  ResponseWithData«PageUtils«CommentReplyEntity»»:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 200
      data:
        $ref: '#/definitions/PageUtils«CommentReplyEntity»'
      msg:
        type: string
        example: success
    title: ResponseWithData«PageUtils«CommentReplyEntity»»
  ResponseWithData«PageUtils«GoodEntity»»:
    type: object
    properties:
      code:
        type: integer
        format: int32
        example: 200
      data:
        $ref: '#/definitions/PageUtils«GoodEntity»'
      msg:
        type: string
        example: success
    title: ResponseWithData«PageUtils«GoodEntity»»